{
  "version": 3,
  "sources": ["../../../src/lib/modbus/modbus_device.ts"],
  "sourcesContent": ["import {ModbusDatatype} from './modbus_types';\nimport {ModbusConnection} from './modbus_util';\n\ninterface Device {\n    readModbusHR(register: number, datatype: ModbusDatatype): Promise<any>;\n\n    readModbusIR(register: number, datatype: ModbusDatatype): Promise<any>;\n\n    getIpAddress(): string;\n}\n\nexport class ModbusDevice implements Device {\n    private connection: ModbusConnection;\n    private ipAddress: string;\n    private unitId: number;\n\n    constructor(ipAddress: string, modbusPort: number = 502, unitId: number = 1 ) {\n        this.unitId = unitId;\n        this.connection = new ModbusConnection(ipAddress, modbusPort, this.unitId);\n        this.ipAddress = ipAddress;\n    }\n\n    getIpAddress(): string {\n        return this.ipAddress;\n    }\n\n    async readRawData(register: number, length: number): Promise<Buffer> {\n        return this.connection.readRawData(register, length)\n    }\n\n    async readModbusHR(register: number, datatype: ModbusDatatype, length?: number): Promise<any> {\n        return this.connection.readModbusHR(register, datatype, length);\n    }\n\n    async readModbusIR(register: number, datatype: ModbusDatatype, length?: number): Promise<any> {\n        return this.connection.readModbusIR(register, datatype, length);\n    }\n\n    close(): void{\n        this.connection.close();\n    }\n\n    isConnected(): boolean {\n        return this.connection.isOpen()\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,yBAA+B;AAUxB,MAAM,aAA+B;AAAA,EAKxC,YAAY,WAAmB,aAAqB,KAAK,SAAiB,GAAI;AAC1E,SAAK,SAAS;AACd,SAAK,aAAa,IAAI,oCAAiB,WAAW,YAAY,KAAK,MAAM;AACzE,SAAK,YAAY;AAAA,EACrB;AAAA,EAEA,eAAuB;AACnB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,MAAM,YAAY,UAAkB,QAAiC;AACjE,WAAO,KAAK,WAAW,YAAY,UAAU,MAAM;AAAA,EACvD;AAAA,EAEA,MAAM,aAAa,UAAkB,UAA0B,QAA+B;AAC1F,WAAO,KAAK,WAAW,aAAa,UAAU,UAAU,MAAM;AAAA,EAClE;AAAA,EAEA,MAAM,aAAa,UAAkB,UAA0B,QAA+B;AAC1F,WAAO,KAAK,WAAW,aAAa,UAAU,UAAU,MAAM;AAAA,EAClE;AAAA,EAEA,QAAa;AACT,SAAK,WAAW,MAAM;AAAA,EAC1B;AAAA,EAEA,cAAuB;AACnB,WAAO,KAAK,WAAW,OAAO;AAAA,EAClC;AACJ;",
  "names": []
}
